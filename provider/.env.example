
#debug mode
# DEBUG=h5p-editor,h5p:*
# LOG_LEVEL=debug

# express (server) config ----------------------------
PORT=${NODE_PORT}

#session config
SESSION_SECRET=mysecret
#NODE_ENV=development
NODE_ENV=production

#Use temporal uploads
TEMP_UPLOADS=true

#max json requests size (default: 500mb)
MAX_JSON_BODY_SIZE=500mb
#IMPORTANT: in case of file upload problems, also check "config.json" configuration file

# ---------------------------- express (server) config

# LTI config ----------------------------
#Used to build ContenItem Links
SERVER_NAME=https://----MY_LTI_DOMAIN----

#Here is where your LMS URL must be set
ACCEPTED_LTI_CONSUMERS=http://localhost

OAUTH_CONSUMER_KEY=edf-lti-h5p
OAUTH_SECRET=myltisecret
#  ---------------------------- LTI config

# H5P config ----------------------------
#cache type: in-memory | redis | (blank: none)
CACHE=redis
#library storage system: mongo | mongos3 | (blank: in-memory)
LIBRARYSTORAGE=mongo
#user data storage system: mongo | file | (blank: file)
USERDATASTORAGE=mongo
#content storage system: mongos3 | (blank: file)
#CONTENTSTORAGE=
#temporary storage system: s3 | (blank: file)
#TEMPORARYSTORAGE=

#lock system (used in multi-node/clustered environment): redis | (blank: in-memory)
#LOCK=
#LOCK_REDIS_HOST=
#LOCK_REDIS_PORT=
#LOCK_REDIS_DB=

#content storage config (only for mongo-s3)
#CONTENT_MONGO_COLLECTION=
#CONTENT_AWS_S3_BUCKET=
#AWS_S3_MAX_FILE_LENGTH=

#temporary storage config (only for s3)
#TEMPORARY_AWS_S3_BUCKET=
#(shared with "content storage config")
#AWS_S3_MAX_FILE_LENGTH=

#we want mongodb to store library and userdata
LIBRARY_MONGO_COLLECTION=library
USERDATA_MONGO_COLLECTION=userdata
FINISHED_MONGO_COLLECTION=finished
SELECTED_ITEMS_MONGO_COLLECTION=selected_items

#redis config (used by Node connections)
# if used inside docker network
REDIS_HOST=redis
# if used outside docker network
# REDIS_HOST=localhost
REDIS_PORT=${REDIS_PORT}
#REDIS_AUTH_PASS=
REDIS_DB_LIBRARY_CACHE=0
REDIS_DB_LTI=1

#mongodb config (used by Node connections)
# if used inside docker network
MONGODB_HOST=mongodb
# if used outside docker network
# MONGODB_HOST=localhost
MONGODB_PORT=${MONGODB_PORT}
MONGODB_URL=mongodb://${MONGODB_HOST}:${MONGODB_PORT}
MONGODB_USER=${MONGODB_USER}
MONGODB_PASSWORD=${MONGODB_PASSWORD}
MONGODB_DB=${MONGODB_DB}
# ---------------------------- H5P config
