version: "3.1"
services:
  app:
    container_name: h5p-lti-provider
    depends_on:
      - redis
      - mongodb
    working_dir: /home/node/app
    ports:
      - "${NODE_PORT}:${NODE_PORT}"
    networks:
      - myinternal
    volumes:
       - './content:/home/node/app/h5p/content:rw'
    env_file: ./provider/.env
    build:
      context: ./provider
      dockerfile: Dockerfile
    command: npm run start
    #keep container running
    tty: true
    stdin_open: true


  redis:
    image: "redis:alpine"
    container_name: redis
    ports:
      - "${REDIS_PORT}:${REDIS_PORT}"
    volumes:
       - 'redis_data_volume:/data'
    networks:
      - myinternal

  mongodb:
    image: "mongodb/mongodb-community-server:latest"
    container_name: mongodb
    restart: unless-stopped
    ports:
      - "${MONGODB_PORT}:${MONGODB_PORT}"
    environment:
      MONGODB_INITDB_ROOT_USERNAME: ${MONGODB_USER}
      MONGODB_INITDB_ROOT_PASSWORD: ${MONGODB_PASSWORD}
      MONGODB_INITDB_DATABASE: ${MONGODB_DB}
    volumes:
       - 'mongodb_data_volume:/data/db'
       - 'mongodb_dataconfig_volume:/data/configdb'
    networks:
      - myinternal

volumes:
  redis_data_volume:
  mongodb_data_volume:
  mongodb_dataconfig_volume:

networks:
  myinternal:
